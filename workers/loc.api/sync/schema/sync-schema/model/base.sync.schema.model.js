'use strict'

const { cloneDeep } = require('lib-js-util-base')

const TABLES_NAMES = require('../../tables-names')
const ALLOWED_COLLS = require('../../allowed.colls')
const COLLS_TYPES = require('../../colls.types')
const PUBLIC_COLLS_CONF_NAMES = require(
  '../../../colls.accessors/public.colls.conf.names'
)

const SUPPORTED_MODEL_FIELDS = {
  NAME: 'name',
  MAX_LIMIT: 'maxLimit',
  DATE_FIELD_NAME: 'dateFieldName',
  SYMBOL_FIELD_NAME: 'symbolFieldName',
  TIMEFRAME_FIELD_NAME: 'timeframeFieldName',
  ORDER: 'sort',
  HAS_NEW_DATA: 'hasNewData',
  START: 'start',
  CONF_NAME: 'confName',
  IS_SYNC_REQUIRED_AT_LEAST_ONCE: 'isSyncRequiredAtLeastOnce',
  ADDITIONAL_API_CALL_ARGS: 'additionalApiCallArgs',
  TYPE: 'type',
  MODEL: 'model',
  DATA_STRUCTURE_CONVERTER: 'dataStructureConverter',
  SQL_GROUP_FNS: 'groupFns',
  SQL_GROUP_RES_BY: 'groupResBy',
  PROJECTION: 'projection'
}

const {
  freezeAndSealObjectDeeply
} = require('../../helpers')

class BaseSyncSchemaModel {
  static NAME = SUPPORTED_MODEL_FIELDS.NAME
  static MAX_LIMIT = SUPPORTED_MODEL_FIELDS.MAX_LIMIT
  static DATE_FIELD_NAME = SUPPORTED_MODEL_FIELDS.DATE_FIELD_NAME
  static SYMBOL_FIELD_NAME = SUPPORTED_MODEL_FIELDS.SYMBOL_FIELD_NAME
  static TIMEFRAME_FIELD_NAME = SUPPORTED_MODEL_FIELDS.TIMEFRAME_FIELD_NAME
  static ORDER = SUPPORTED_MODEL_FIELDS.ORDER
  static HAS_NEW_DATA = SUPPORTED_MODEL_FIELDS.HAS_NEW_DATA
  static START = SUPPORTED_MODEL_FIELDS.START
  static CONF_NAME = SUPPORTED_MODEL_FIELDS.CONF_NAME
  static IS_SYNC_REQUIRED_AT_LEAST_ONCE = SUPPORTED_MODEL_FIELDS.IS_SYNC_REQUIRED_AT_LEAST_ONCE
  static ADDITIONAL_API_CALL_ARGS = SUPPORTED_MODEL_FIELDS.ADDITIONAL_API_CALL_ARGS
  static TYPE = SUPPORTED_MODEL_FIELDS.TYPE
  static MODEL = SUPPORTED_MODEL_FIELDS.MODEL
  static DATA_STRUCTURE_CONVERTER = SUPPORTED_MODEL_FIELDS.DATA_STRUCTURE_CONVERTER
  static SQL_GROUP_FNS = SUPPORTED_MODEL_FIELDS.SQL_GROUP_FNS
  static SQL_GROUP_RES_BY = SUPPORTED_MODEL_FIELDS.SQL_GROUP_RES_BY
  static PROJECTION = SUPPORTED_MODEL_FIELDS.PROJECTION

  static SUPPORTED_MODEL_FIELD_SET = new Set(
    Object.values(SUPPORTED_MODEL_FIELDS)
  )

  static ALLOWED_COLLS_TYPES = {
    INSERTABLE_ARRAY_OBJECTS: COLLS_TYPES.INSERTABLE_ARRAY_OBJECTS,
    UPDATABLE_ARRAY_OBJECTS: COLLS_TYPES.UPDATABLE_ARRAY_OBJECTS,
    UPDATABLE_ARRAY: COLLS_TYPES.UPDATABLE_ARRAY,

    PUBLIC_INSERTABLE_ARRAY_OBJECTS: COLLS_TYPES.PUBLIC_INSERTABLE_ARRAY_OBJECTS,
    PUBLIC_UPDATABLE_ARRAY_OBJECTS: COLLS_TYPES.PUBLIC_UPDATABLE_ARRAY_OBJECTS,
    PUBLIC_UPDATABLE_ARRAY: COLLS_TYPES.PUBLIC_UPDATABLE_ARRAY,

    HIDDEN_INSERTABLE_ARRAY_OBJECTS: COLLS_TYPES.HIDDEN_INSERTABLE_ARRAY_OBJECTS
  }

  static ORDERS = {
    ASC: 1,
    DESC: -1
  }

  static TABLES_NAMES = cloneDeep(TABLES_NAMES)
  static ALLOWED_COLLS = cloneDeep(ALLOWED_COLLS)
  static ALL_COLLS_TYPES = cloneDeep(COLLS_TYPES)
  static PUBLIC_COLLS_CONF_NAMES = cloneDeep(PUBLIC_COLLS_CONF_NAMES)
}

freezeAndSealObjectDeeply(
  BaseSyncSchemaModel.SUPPORTED_MODEL_FIELD_SET,
  BaseSyncSchemaModel.TABLES_NAMES,
  BaseSyncSchemaModel.ALLOWED_COLLS,
  BaseSyncSchemaModel.ALL_COLLS_TYPES,
  BaseSyncSchemaModel.ALLOWED_COLLS_TYPES,
  BaseSyncSchemaModel.PUBLIC_COLLS_CONF_NAMES,
  BaseSyncSchemaModel.ORDERS
)
Object.freeze(BaseSyncSchemaModel)

module.exports = BaseSyncSchemaModel
